import socket
import sctp

amf_ip = "50.0.0.1"
amf_port = 38412
core = "open5gs"
max_gnb = 64

open5gs_ng_setup_request_data = [0x00, 0x15, 0x00, 0x41, 0x00, 0x00, 0x04, 0x00, 0x1b, 0x00, 0x09, 0x00, 0x99, 0xf9, 0x07, 0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x52, 0x40, 0x17, 0x0a, 0x00, 0x55, 0x45, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x4d, 0x2d, 0x67, 0x6e, 0x62, 0x2d, 0x39, 0x39, 0x39, 0x2d, 0x37, 0x30, 0x2d, 0x31, 0x00, 0x66, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x99, 0xf9, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x15, 0x40, 0x01, 0x40]
free5gc_ng_setup_request_data = [0x00, 0x15, 0x00, 0x44, 0x00, 0x00, 0x04, 0x00, 0x1b, 0x00, 0x09, 0x00, 0x02, 0xf8, 0x39, 0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x52, 0x40, 0x17, 0x0a, 0x00, 0x55, 0x45, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x4d, 0x2d, 0x67, 0x6e, 0x62, 0x2d, 0x32, 0x30, 0x38, 0x2d, 0x39, 0x33, 0x2d, 0x31, 0x00, 0x66, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0xf8, 0x39, 0x00, 0x00, 0x10, 0x08, 0x01, 0x02, 0x03, 0x00, 0x15, 0x40, 0x01, 0x40]

def get_ng_setup_request_data(gnb_id: int):
    data = open5gs_ng_setup_request_data if core == "open5gs" else free5gc_ng_setup_request_data

    gnb_id_off = 16
    gnb_id_len = 4
    gnb_id_bytes = gnb_id.to_bytes(length=4, byteorder="big")

    for i in range(gnb_id_len):
        data[gnb_id_off + i] = gnb_id_bytes[i]

    return bytes(data)

def init_association():
    sk = sctp.sctpsocket_tcp(socket.AF_INET)
    sk.connect((amf_ip, amf_port))
    return sk

for i in range(1, max_gnb + 1):
    init_association().sctp_send(msg=get_ng_setup_request_data(i), ppid=0x3C000000)

input("Press a key to exit.")